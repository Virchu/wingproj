library(UsingR)
example(anscombe)
library(swirl)
install.packages("swirl")
library(swirl)
swirl
swirl()
install.packages("swirl")
library(swirl)
rm(list=ls())
library(swirl)
swirl()
fit<-lm(child~parent, data=galton)
sqrt(fit$residuals/n-2)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/n-2))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<- mean(galton$child)
sTot<-galton$child-mu
sTot<-sum((galton$child-mu)^2)
sRes<-sum()
sRes<-deviance(fit)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parents)
cor(galton$child)
cor(galton)
cor(galton$parent,galton$child)^2
ones <- rep(1, nrow(galton))
ones
swirl)_
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent, galton)
lm(child~1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees<-eliminat("Girth",trees)
trees2 <-
| eliminate("Girth", trees
trees2 <-eliminate("Girth", trees
)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(., data=swiss)
all<-lm(., data=swiss)
all<-lm(Fertility~., data=swiss)
summary(all)
summary(lm(Fertility~Agriculture, data=swiss))
cov(swiss$Examination,swiss$Education)
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms(data=swiss)
makelms()
ec<-sum(swiss$Examination+swiss$Catholic)
ec<-swiss$Examination+swiss$Catholic
efit<-lm(Fertility~.+ec, data=swiss)
coef(all)-coef(efit)
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
q1<-lm(y~x)
summary(q1)
beta1<-cor(y,x)* sd(y)/sd(x)
beta()
beta1
summary(beta1)
data=mtcars
head(data)
q3<-lm(mpg~wt)
q3<-lm(mpg~wt, data=data)
summary(q3)
predict(fit,data.frame(x=mean(x)), interval="confidence")
predict(q3,data.frame(x=mean(x)), interval="confidence")
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
?mtcars
predict(fit,data.frame(x=3), interval="prediction")
predict(fit,data.frame(x=2), interval="prediction")
predict(fit,data.frame(x=5), interval="prediction")
predict(fit,data.frame(x=.5), interval="prediction")
predict(fit,data.frame(x=x/2), interval="prediction")
fit2<-lm(y~I(x/2))
tbl2<-summary(fit2)$coefficients
summary(tbl2)
tbl2
summary(fit2)
predict(fit2,data.frame(x=mean(x)), interval="confidence")
swil()
swirl()
library(swirl)
swirl()
View(InsectSprays)
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
s!
sA
summary(InsectSprays[,2])
sapply(InsectSprays)
sapply(class(InsectSprays))
sapply(InsectSprays,class)
lm(count~spray, InsectSprays)
fit<-lm(count~spray, Insectsprays)
fit<-lm(count~spray, InsectSprays)
summary(fit$coefficients)
summary(fit)$coef
est<-fit$coef[,1]
est<-Summary(fit)$coef[,1]
Summary(fit)$coef[,1]
summary(fit)$coef[,1]
est<-summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit<-lm(count~spray-1, InsectSprays)
summary(nfit)$coef
spray2<-relevel(InsectSprays$spray, "C")
fit2<-lm(count~spray, spray2)
fit2<-lm(count~spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef[2]-fit$coef[3]
(fit$coef[2]-fit$coef[3])/1.0611
(fit$coef[2]-fit$coef[3])/1.6011
library(mtcars)
mtcars
head(mtcars)
fit<-lm(mpg~cyl+wt)
fit<-lm(mpg~cyl+wt,data=mtcars)
summary(fit)
summary(fit)$coef
summary(fit)$coef[3,1]
mtcars$cyl1<-factor(mtcars$cyl)
fit<-lm(mpg~cyl+wt,data=mtcars)
summary(fit)$coef
summary(fit)$coef[3,1]
mtcars$cyl<- factor(mtcars$cyl)
fit<- lm(mpg~cyl+wt,mtcars)
summary(fit)$coef[3,1]
summary(fit)$coef
fitun<-lm(mpg~cyl, data=mtcars)
summary(fitun)$coef[3,1]
fitin<-lm(mpg~cyl*wt,data=mtcars)
summary(fitin)
summary(fit)
library(lmtest)
install.packages("lmtest")
lrtest(fit,fitin)
library(lmtest)
lrtest(fit,fitin)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
summary(fit4)$coef[2,1]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<- lm(y~x)
predict(fit)
hat(x,intercept = TRUE)
influence.measures(fit)$infmat[5,"dfb.x"]
dfbeta(x)
dfbeta(fit)
dfbeta(fit,influence)
setwd("C:/Users/vmc04/Dropbox/Wing project")
quicklind<-read.csv("Quick csize lin.csv", headers=TRUE)
quicklind<-read.csv("Quick csize lin.csv", header=TRUE)
head(quicklind)
fit<-lm(Csize~Latitude, data=quicklind)
fit<-lm(quicklind$Csize~quicklind$Latitude)
fit<-lm(quicklind$CSize~quicklind$Latitude)
summary(fit)
plot(fit)
