library(UsingR)
example(anscombe)
library(swirl)
install.packages("swirl")
library(swirl)
swirl
swirl()
install.packages("swirl")
library(swirl)
rm(list=ls())
library(swirl)
swirl()
fit<-lm(child~parent, data=galton)
sqrt(fit$residuals/n-2)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/n-2))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<- mean(galton$child)
sTot<-galton$child-mu
sTot<-sum((galton$child-mu)^2)
sRes<-sum()
sRes<-deviance(fit)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parents)
cor(galton$child)
cor(galton)
cor(galton$parent,galton$child)^2
ones <- rep(1, nrow(galton))
ones
swirl)_
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent, galton)
lm(child~1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees<-eliminat("Girth",trees)
trees2 <-
| eliminate("Girth", trees
trees2 <-eliminate("Girth", trees
)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(., data=swiss)
all<-lm(., data=swiss)
all<-lm(Fertility~., data=swiss)
summary(all)
summary(lm(Fertility~Agriculture, data=swiss))
cov(swiss$Examination,swiss$Education)
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms(data=swiss)
makelms()
ec<-sum(swiss$Examination+swiss$Catholic)
ec<-swiss$Examination+swiss$Catholic
efit<-lm(Fertility~.+ec, data=swiss)
coef(all)-coef(efit)
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
q1<-lm(y~x)
summary(q1)
beta1<-cor(y,x)* sd(y)/sd(x)
beta()
beta1
summary(beta1)
data=mtcars
head(data)
q3<-lm(mpg~wt)
q3<-lm(mpg~wt, data=data)
summary(q3)
predict(fit,data.frame(x=mean(x)), interval="confidence")
predict(q3,data.frame(x=mean(x)), interval="confidence")
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
?mtcars
predict(fit,data.frame(x=3), interval="prediction")
predict(fit,data.frame(x=2), interval="prediction")
predict(fit,data.frame(x=5), interval="prediction")
predict(fit,data.frame(x=.5), interval="prediction")
predict(fit,data.frame(x=x/2), interval="prediction")
fit2<-lm(y~I(x/2))
tbl2<-summary(fit2)$coefficients
summary(tbl2)
tbl2
summary(fit2)
predict(fit2,data.frame(x=mean(x)), interval="confidence")
swil()
swirl()
library(swirl)
swirl()
View(InsectSprays)
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
s!
sA
summary(InsectSprays[,2])
sapply(InsectSprays)
sapply(class(InsectSprays))
sapply(InsectSprays,class)
lm(count~spray, InsectSprays)
fit<-lm(count~spray, Insectsprays)
fit<-lm(count~spray, InsectSprays)
summary(fit$coefficients)
summary(fit)$coef
est<-fit$coef[,1]
est<-Summary(fit)$coef[,1]
Summary(fit)$coef[,1]
summary(fit)$coef[,1]
est<-summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit<-lm(count~spray-1, InsectSprays)
summary(nfit)$coef
spray2<-relevel(InsectSprays$spray, "C")
fit2<-lm(count~spray, spray2)
fit2<-lm(count~spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef[2]-fit$coef[3]
(fit$coef[2]-fit$coef[3])/1.0611
(fit$coef[2]-fit$coef[3])/1.6011
library(mtcars)
mtcars
head(mtcars)
fit<-lm(mpg~cyl+wt)
fit<-lm(mpg~cyl+wt,data=mtcars)
summary(fit)
summary(fit)$coef
summary(fit)$coef[3,1]
mtcars$cyl1<-factor(mtcars$cyl)
fit<-lm(mpg~cyl+wt,data=mtcars)
summary(fit)$coef
summary(fit)$coef[3,1]
mtcars$cyl<- factor(mtcars$cyl)
fit<- lm(mpg~cyl+wt,mtcars)
summary(fit)$coef[3,1]
summary(fit)$coef
fitun<-lm(mpg~cyl, data=mtcars)
summary(fitun)$coef[3,1]
fitin<-lm(mpg~cyl*wt,data=mtcars)
summary(fitin)
summary(fit)
library(lmtest)
install.packages("lmtest")
lrtest(fit,fitin)
library(lmtest)
lrtest(fit,fitin)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
summary(fit4)$coef[2,1]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<- lm(y~x)
predict(fit)
hat(x,intercept = TRUE)
influence.measures(fit)$infmat[5,"dfb.x"]
dfbeta(x)
dfbeta(fit)
dfbeta(fit,influence)
getwd()
?Sweave
setwd("C:/Users/vmc04/Dropbox/Life history data")
lifehist<-read.csv("2017_09_28 Life history data file.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
head(lifehist)
setwd("C:/Users/vmc04/GitHub/wingproj/lifehist")
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehist<-read.csv("2017_09_28 Life history data file.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
head(lifehist)
View(lifehist)
#lifehist larvae life of surviving larvae to adult
lifehist$sLL= ifelse(lifehist$Adult.death!="NA",lifehist$Pupation.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if survived to adult (time to emerge)
lifehist$Emtime= ifelse(lifehist$Adult.death!="NA",lifehist$Emergence.date-lifehist$Hatch.day ,NA)
?write.csv
#lifehist preadult length of life if died before adult Preadult.death
lifehist$Preadult.death=ifelse(!is.na(lifehist$PD),lifehist$PD-lifehist$Hatch.day,
ifelse(!is.na(lifehist$LD),lifehist$LD-lifehist$Hatch.day, NA))
#if adult death is NA, then Sex= NA
lifehist$Sex1=ifelse(is.na(lifehist$Adult.death), NA,ifelse(lifehist$Sex=="M",1,0))
#deathstatus is 0=for died preadult, 1= for died as adult
lifehist$Death_stat=ifelse(is.na(lifehist$Preadult.death), 1,0)
#Rate of adult development
lifehist$AdRate<- (1/lifehist$Emtime)
#Rate of larvae development
lifehist$LarvRate<- (1/lifehist$sLL)
#length of time as pupae
lifehist$Puplen<- lifehist$Emergence.date-lifehist$Pupation.date
#Rate of pupal development
lifehist$Puprate<- (1/lifehist$Puplen)
#rate of development if died as preadult
lifehist$D.pread.rate<- (1/lifehist$Preadult.death)
#length of adult life
lifehist$AL<- lifehist$Adult.death-lifehist$Emergence.date
#print out new datafile
write.csv(lifehist,"2017_10_17 Life history data new clean file.csv", col.names = TRUE)
write.csv(lifehist,"2017_10_17 Life history data new clean file.csv")
write.csv(lifehist,"C:/Users/vmc04/Documents/GitHub/wingproj/lifehist/2017_10_17 Life history data new clean file.csv")
lifehist<-read.csv("2017_09_28 Life history data file.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
head(lifehist)
#lifehist larvae life of surviving larvae to adult
lifehist$sLL= ifelse(lifehist$Adult.death!="NA",lifehist$Pupation.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if survived to adult (time to emerge)
lifehist$Emtime= ifelse(lifehist$Adult.death!="NA",lifehist$Emergence.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if died before adult Preadult.death
lifehist$Preadult.death=ifelse(!is.na(lifehist$PD),lifehist$PD-lifehist$Hatch.day,
ifelse(!is.na(lifehist$LD),lifehist$LD-lifehist$Hatch.day, NA))
#if adult death is NA, then Sex= NA
lifehist$Sex1=ifelse(is.na(lifehist$Adult.death), NA,ifelse(lifehist$Sex=="M",1,0))
#deathstatus is 0=for died preadult, 1= for died as adult
lifehist$Death_stat=ifelse(is.na(lifehist$Preadult.death), 1,0)
#Rate of adult development
lifehist$AdRate<- (1/lifehist$Emtime)
#Rate of larvae development
lifehist$LarvRate<- (1/lifehist$sLL)
#length of time as pupae
lifehist$Puplen<- lifehist$Emergence.date-lifehist$Pupation.date
#Rate of pupal development
lifehist$Puprate<- (1/lifehist$Puplen)
#rate of development if died as preadult
lifehist$D.pread.rate<- (1/lifehist$Preadult.death)
#length of adult life
lifehist$AL<- lifehist$Adult.death-lifehist$Emergence.date
#print out new datafile
write.csv(lifehist,"C:/Users/vmc04/Documents/GitHub/wingproj/lifehist/2017_10_17 Life history data new clean file.csv")
View(lifehist)
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehist<-read.csv("2017_09_28 Life history data file.csv", header=TRUE)
View(lifehist)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
head(lifehist)
#lifehist larvae life of surviving larvae to adult
lifehist$sLL= ifelse(lifehist$Adult.death!="NA",lifehist$Pupation.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if survived to adult (time to emerge)
lifehist$Emtime= ifelse(lifehist$Adult.death!="NA",lifehist$Emergence.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if died before adult Preadult.death
lifehist$Preadult.death=ifelse(!is.na(lifehist$PD),lifehist$PD-lifehist$Hatch.day,
ifelse(!is.na(lifehist$LD),lifehist$LD-lifehist$Hatch.day, NA))
#if adult death is NA, then Sex= NA
lifehist$Sex1=ifelse(is.na(lifehist$Adult.death), NA,ifelse(lifehist$Sex=="M",1,0))
#deathstatus is 0=for died preadult, 1= for died as adult
lifehist$Death_stat=ifelse(is.na(lifehist$Preadult.death), 1,0)
#Rate of adult development
lifehist$AdRate<- (1/lifehist$Emtime)
#Rate of larvae development
lifehist$LarvRate<- (1/lifehist$sLL)
#length of time as pupae
lifehist$Puplen<- lifehist$Emergence.date-lifehist$Pupation.date
#Rate of pupal development
lifehist$Puprate<- (1/lifehist$Puplen)
#rate of development if died as preadult
lifehist$D.pread.rate<- (1/lifehist$Preadult.death)
#length of adult life
lifehist$AL<- lifehist$Adult.death-lifehist$Emergence.date
#print out new datafile
write.csv(lifehist,"2017_10_17 Life history data new clean file.csv")
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehist<-read.csv("2017_09_28 Life history data file1.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
View(lifehist)
lifehist$sLL= ifelse(lifehist$Adult.death!="NA",lifehist$Pupation.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if survived to adult (time to emerge)
lifehist$Emtime= ifelse(lifehist$Adult.death!="NA",lifehist$Emergence.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if died before adult Preadult.death
lifehist$Preadult.death=ifelse(!is.na(lifehist$PD),lifehist$PD-lifehist$Hatch.day,
ifelse(!is.na(lifehist$LD),lifehist$LD-lifehist$Hatch.day, NA))
lifehist$Sex1=ifelse(is.na(lifehist$Adult.death), NA,ifelse(lifehist$Sex=="M",1,0))
#deathstatus is 0=for died preadult, 1= for died as adult
lifehist$Death_stat=ifelse(is.na(lifehist$Preadult.death), 1,0)
#Rate of adult development
lifehist$AdRate<- (1/lifehist$Emtime)
#Rate of larvae development
lifehist$LarvRate<- (1/lifehist$sLL)
#length of time as pupae
lifehist$Puplen<- lifehist$Emergence.date-lifehist$Pupation.date
#Rate of pupal development
lifehist$Puprate<- (1/lifehist$Puplen)
#rate of development if died as preadult
lifehist$D.pread.rate<- (1/lifehist$Preadult.death)
#length of adult life
lifehist$AL<- lifehist$Adult.death-lifehist$Emergence.date
write.csv(lifehist,"2017_10_17 Life history data new clean file.csv", row.names=F)
getwd()
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
getwd()
knitr::opts_chunk$set(echo = TRUE)
getwd()
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
write.csv(lifehist,"C:/Users/vmc04/Documents/GitHub/wingproj/lifehist/2017_10_17 Life history data new clean file.csv", row.names=F)
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehistfull<-read.csv("2017_10_17 Life history data new clean file.csv", header=TRUE)
lifehistfull$Locality=factor(lifehistfull$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
#limit data to results and identifiers
colnames(lifehistfull)
#get subset of data
#just ID, Biome, State, Latitude, Locality, Family, Temp_let, Temp_num, Sex, Sex1, Wing length, sll, dll, dpl,emtime, pre
lifehistshort<-subset(lifehistfull, select=c(1:8,16, 25, 17,20:24, 26:33 ))
##subset data by sexes
lifehist_females<-subset(lifehistshort, Sex=="F", select=c(1:24))
lifehist_males<-subset(lifehistshort, Sex=="M", select=c(1:24))
colnames(lifehistshort)
tab1<-aggregate(lifehistshort, list(Death_stat, Locality, Temp_let), FUN=mean)
tab1<-aggregate (lifehistshort$Death_stat, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let, Family =lifehistshort$Family),mean, na.rm=TRUE)
tab1
tab1<-aggregate (lifehistshort$Death_stat, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let),length, na.rm=TRUE)
tab1<-aggregate (lifehistshort$Death_stat, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let),count, na.rm=TRUE)
tab1<-aggregate (lifehistshort$Death_stat, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let),nrow, na.rm=TRUE)
tab1<-aggregate (lifehistshort$Death_stat, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let),nrow)
tab1
tab1<-aggregate (lifehistshort$Death_stat, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let),sum)
tab1
tab1<-aggregate (lifehistshort$Death_stat, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let, sex=lifehistshort$Sex),sum)
tab1
View(lifehistshort)
write.csv(lifehistshort, "2017_10_18 Life history shortened.csv")
View(lifehistshort)
class(lifehistshort$Temp_let)
class(lifehistshort$Temp_num)
boxplot(AdRate~Temp_let, data=lifehistshort)
boxplot(AdRate~Biome, data=lifehistshort)
boxplot(AdRate~Locality, data=lifehistshort)
boxplot(AdRate~Locality|Biome, data=lifehistshort)
install.packages("lattice")
library(lattice)
boxplot(AdRate~Locality|Biome, data=lifehistshort)
dotplot(AdRate~Locality|Biome, data=lifehistshort)
res1<-lm(AdRate~ Biome + Biome/Locality, data=lifehistshort)
anova(res1)
TukeyHSD(aov(res1), "Biome")
TukeyHSD(aov(res1), "Biome:Locality")
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehistshort<-read.csv("2017_10_18 Life history shortened.csv", header=TRUE)
lifehistshort$Locality=factor(lifehistshort$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
View(lifehistshort)
tab1<-aggregate (lifehistshort$Death_stat, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let, sex=lifehistshort$Sex),sum)
write.table(tab1, "clipboard", sep='\t', row.names=FALSE)
tab2<-aggregate (lifehistshort$Locality, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let),sum)
tab2<-aggregate (lifehistshort$Locality, list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let),length)
write.table(tab2, "clipboard", sep='\t', row.names=FALSE)
lifetot<-read.csv("2017_10_19 Life hist totals for proportion  survived from temp.csv", header=TRUE)
lifetot<-read.csv("2017_10_19 Life hist totals for proportion  survived from temp.csv", header=TRUE)
View(lifetot)
lifetot$Total<-sum(Female+Male+Died, data=lifetot)
lifetot$Total<-lifetot$Female+lifetot$Male+lifetot$Died
lifetot$PerFem<-lifetot$Female/lifetot$Total
lifetot$PerMal<-lifetot$Male/lifetot$Total
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex, correction=FALSE)
)
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex), correction=FALSE)
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex))
prop.test(table(lifetot$Female, lifetot$Temp), correct=FALSE)
table(lifetot$Female, lifetot$Temp)
table( lifetot$Temp,lifetot$Female)
table( lifehistshort$Temp_let, lifehistshort$Sex)
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex))
table( lifehistshort$Temp_let, lifehistshort$Sex1)
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex1))
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex1), correct=FALSE)
prop.test(table(lifehistshort$Temp_num, lifehistshort$Sex1), correct=FALSE)
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex1), correct=FALSE)
table( lifehistshort$Locality, lifehistshort$Sex1)
prop.test(table(lifehistshort$Locality, lifehistshort$Sex1), correct=FALSE)
tab3<-aggregate (lifehistshort$Wing.length..mm., list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let, Sex=lifehistshort$Sex),FUN=function(x) c(mu=mean(x), sd=sd(x), count=length(x)))
View(tab3)
tab3<-aggregate (lifehistshort$Wing.length..mm.~ list (LOC= lifehistshort$Locality, TEMP= lifehistshort$Temp_let, Sex=lifehistshort$Sex),data=lifehistshort, FUN=function(x) c(mu=mean(x), sd=sd(x), count=length(x)))
tab3<-aggregate (lifehistshort$Wing.length..mm.~ lifehistshort$Locality +lifehistshort$Temp_let+ lifehistshort$Sex,data=lifehistshort, FUN=function(x) c(mu=mean(x), sd=sd(x), count=length(x)))
tab4<-aggregate (Wing.length..mm.~ Locality +Temp_let+ Sex,data=lifehistshort, FUN=function(lifehistshort) c(mu=mean(lifehistshort), sd=sd(lifehistshort), count=length(lifehistshort)))
View(tab4)
tab4<- lifehistshort[,.(Winglen=mean(Wing.length..mm.), count=.N), by=.(Locality, Sex, Temp_let)]
tab4<- lifehistshort[,.(Winglen_m=mean(Wing.length..mm.),Winglen_sd=sd(Wing.length..mm.) count=.N), by=.(Locality, Temp_let)]
tab4<- lifehistshort[,.(Winglen_m=mean(Wing.length..mm.),Winglen_sd=sd(Wing.length..mm.) count=.N), by=.( Temp_let)]
tab4<-lifehistshort[,.(Winglen_m=mean(Wing.length..mm.),Winglen_sd=sd(Wing.length..mm.), count=.N), by=.( Temp_let)]
tab4<-lifehistshort[,.(Winglen_m=mean(Wing.length..mm.),Winglen_sd=sd(Wing.length..mm.), count=.N), by=(Temp_let)]
tab4<-lifehistshort[,.(Winglen_m=mean(Wing.length..mm.),Winglen_sd=sd(Wing.length..mm.), count=.N)]
tab4<-lifehistshort[,(Winglen_m=mean(Wing.length..mm.),Winglen_sd=sd(Wing.length..mm.), count=N)]
tab4<-lifehistshort[,(Winglen_m=mean(Wing.length..mm.),Winglen_sd=sd(Wing.length..mm.), count=length(Wing.length..mm.))]
library(dplyr)
require(data.table)
tab4<-lifehistshort[, .(Winglenm=mean(Wing.length..mm.), n=.N), by.(Locality, Temp_let)]
tab4<-lifehistshort[, .(Winglenm=mean(Wing.length..mm.), n=.N), by=.(Locality, Temp_let)]
table( lifehistshort$Locality, lifehistshort$Sex1)
table( lifehistshort$Temp_let, lifehistshort$Sex1)
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex1), correct=FALSE)
table( lifehistshort$Locality, lifehistshort$Sex1)
prop.test(table(lifehistshort$Locality, lifehistshort$Sex1), correct=FALSE)
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex1), correct=FALSE)
library(MASS)
survtab<-xtabs(Death_stat~Localtiy+Temp_let, data=lifehistshort)
survtab<-xtabs(Death_stat~Locality+Temp_let, data=lifehistshort)
loglm(~Locality+Temp_let,survtable)
loglm(~Locality+Temp_let,survtab)
?crosstable
install.packages("gmodels")
library(gmodels)
?crosstable
?CrossTable
lifetot$Alive<-lifetot$Male+lifetot$Female
CrossTable(lifetot$Alive, lifetot$Temp+lifetot$Locality, chisq=TRUE)
CrossTable(lifetot$Alive, lifetot$Temp, chisq=TRUE)
CrossTable(lifehistshort$Death_stat, lifehistshort$Temp_let, chisq=TRUE)
CrossTable(lifehistshort$Locality, lifehistshort$Temp_let, chisq=TRUE)
CrossTable(lifehistshort$Death_stat, (lifehistshort$Temp_let+lifehistshort$Locality), chisq=TRUE)
CrossTable(lifehistshort$Death_stat, (lifehistshort$Temp_let*lifehistshort$Locality), chisq=TRUE)
?chisq.test
chisq.test(lifehistshort$Death_stat, lifehistshort$Temp_let+lifehistshort$Locality)
CrossTable(lifetot$Locality, lifetot$Temp_let, chisq=TRUE)
CrossTable(lifetot$Locality, lifetot$Temp, chisq=TRUE)
lifecont<-subset(lifehistshort, select=c(5,7,17) )
View(lifecont)
tbl<- table(lifecont)
tbl
lifecont1<-read.csv("2017_10_19 Life hist totals for proportion  survived from temp1.csv",header=TRUE)
View(lifecont1)
tbl<- table(lifecont1)
tbl
class(lifecont1)
tempo=xtabs(count~Temp+Locality+Status, lifecont1)
?xtabs
tempo=xtabs(count~Temperature+Locality+Status, data=lifecont1)
as.matrix(lifecont1)
tempo=xtabs(count~Temperature+Locality+Status, data=lifecont1)
class(lifecont1)
as.matric(lifecont1)
as.matrix(lifecont1)
lifecont2<-as.matrix(lifecont1)
tempo=xtabs(count~Temperature+Locality+Status, data=lifecont2)
Input =(
"                  Group W.Child B.adult PA.white W.men G.soldier
Whorl      Handed
Clockwise  Right            708     136      106    109      801
Left              50      24       32     22      102
CounterCl  Right            169      73       17     16      180
Left              13      14        4     26       25
")
Tabla = as.table(read.ftable(textConnection(Input)))
Input =("
Location    Habitat     Allele     Count
Tillamook  marine          94     56
Tillamook  estuarine       94     69
Tillamook  marine      non-94     40
Tillamook  estuarine   non-94     77
Yaquina    marine          94     61
Yaquina    estuarine       94    257
Yaquina    marine      non-94     57
Yaquina    estuarine   non-94    301
Alsea      marine          94     73
Alsea      estuarine       94     65
Alsea      marine      non-94     71
Alsea      estuarine   non-94     79
Umpqua     marine          94     71
Umpqua     estuarine       94     48
Umpqua     marine      non-94     55
Umpqua     estuarine   non-94     48
")
Data = read.table(textConnection(Input),header=TRUE
)
View(Data)
data=mutate(lifecont1, Locality=factor(Locality, levels=unique(Locality)),
Temperature=factor(Temperature, levels=unique(Temperature)),
Status=factor(Status, levels=unique(Status)))
View(data)
data=mutate(lifecont1, Locality=factor(Locality, levels=("ARS","APR","RPV","RMO","TLC","TPN","SJU"))),
data=mutate(lifecont1, Locality=factor(Locality, levels=c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))),
data=mutate(lifecont1, Locality=factor(Locality, levels=unique(Locality)),
Temperature=factor(Temperature, levels=unique(Temperature)),
Status=factor(Status, levels=unique(Status)))
data.xtabs=xtabs(Count~Locality+Temperature+Status, data=data)
ftable(data.xtabs)
ftable(data.xtabs)
mantelhaen.test(data.xtabs)
Data.xtabs = xtabs(Count ~ Allele + Habitat + Location,
data=Data)
n = dim(Data.xtabs)[3]
n
n=dim(data.xtabs)[3]
for(i in 1:n){
Name = dimnames(Data.xtabs)[3]$Locality[i]
P.value = fisher.test(Data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
for(i in 1:n){
Name = dimnames(Data.xtabs)[3]$Location[i]
P.value = fisher.test(Data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
n
n=dim(data.xtabs)[3]
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
