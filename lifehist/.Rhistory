summary(fitin)
summary(fit)
library(lmtest)
install.packages("lmtest")
lrtest(fit,fitin)
library(lmtest)
lrtest(fit,fitin)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
summary(fit4)$coef[2,1]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<- lm(y~x)
predict(fit)
hat(x,intercept = TRUE)
influence.measures(fit)$infmat[5,"dfb.x"]
dfbeta(x)
dfbeta(fit)
dfbeta(fit,influence)
getwd()
?Sweave
setwd("C:/Users/vmc04/Dropbox/Life history data")
lifehist<-read.csv("2017_09_28 Life history data file.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
head(lifehist)
setwd("C:/Users/vmc04/GitHub/wingproj/lifehist")
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehist<-read.csv("2017_09_28 Life history data file.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
head(lifehist)
View(lifehist)
#lifehist larvae life of surviving larvae to adult
lifehist$sLL= ifelse(lifehist$Adult.death!="NA",lifehist$Pupation.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if survived to adult (time to emerge)
lifehist$Emtime= ifelse(lifehist$Adult.death!="NA",lifehist$Emergence.date-lifehist$Hatch.day ,NA)
?write.csv
#lifehist preadult length of life if died before adult Preadult.death
lifehist$Preadult.death=ifelse(!is.na(lifehist$PD),lifehist$PD-lifehist$Hatch.day,
ifelse(!is.na(lifehist$LD),lifehist$LD-lifehist$Hatch.day, NA))
#if adult death is NA, then Sex= NA
lifehist$Sex1=ifelse(is.na(lifehist$Adult.death), NA,ifelse(lifehist$Sex=="M",1,0))
#deathstatus is 0=for died preadult, 1= for died as adult
lifehist$Death_stat=ifelse(is.na(lifehist$Preadult.death), 1,0)
#Rate of adult development
lifehist$AdRate<- (1/lifehist$Emtime)
#Rate of larvae development
lifehist$LarvRate<- (1/lifehist$sLL)
#length of time as pupae
lifehist$Puplen<- lifehist$Emergence.date-lifehist$Pupation.date
#Rate of pupal development
lifehist$Puprate<- (1/lifehist$Puplen)
#rate of development if died as preadult
lifehist$D.pread.rate<- (1/lifehist$Preadult.death)
#length of adult life
lifehist$AL<- lifehist$Adult.death-lifehist$Emergence.date
#print out new datafile
write.csv(lifehist,"2017_10_17 Life history data new clean file.csv", col.names = TRUE)
write.csv(lifehist,"2017_10_17 Life history data new clean file.csv")
write.csv(lifehist,"C:/Users/vmc04/Documents/GitHub/wingproj/lifehist/2017_10_17 Life history data new clean file.csv")
lifehist<-read.csv("2017_09_28 Life history data file.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
head(lifehist)
#lifehist larvae life of surviving larvae to adult
lifehist$sLL= ifelse(lifehist$Adult.death!="NA",lifehist$Pupation.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if survived to adult (time to emerge)
lifehist$Emtime= ifelse(lifehist$Adult.death!="NA",lifehist$Emergence.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if died before adult Preadult.death
lifehist$Preadult.death=ifelse(!is.na(lifehist$PD),lifehist$PD-lifehist$Hatch.day,
ifelse(!is.na(lifehist$LD),lifehist$LD-lifehist$Hatch.day, NA))
#if adult death is NA, then Sex= NA
lifehist$Sex1=ifelse(is.na(lifehist$Adult.death), NA,ifelse(lifehist$Sex=="M",1,0))
#deathstatus is 0=for died preadult, 1= for died as adult
lifehist$Death_stat=ifelse(is.na(lifehist$Preadult.death), 1,0)
#Rate of adult development
lifehist$AdRate<- (1/lifehist$Emtime)
#Rate of larvae development
lifehist$LarvRate<- (1/lifehist$sLL)
#length of time as pupae
lifehist$Puplen<- lifehist$Emergence.date-lifehist$Pupation.date
#Rate of pupal development
lifehist$Puprate<- (1/lifehist$Puplen)
#rate of development if died as preadult
lifehist$D.pread.rate<- (1/lifehist$Preadult.death)
#length of adult life
lifehist$AL<- lifehist$Adult.death-lifehist$Emergence.date
#print out new datafile
write.csv(lifehist,"C:/Users/vmc04/Documents/GitHub/wingproj/lifehist/2017_10_17 Life history data new clean file.csv")
View(lifehist)
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehist<-read.csv("2017_09_28 Life history data file.csv", header=TRUE)
View(lifehist)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
head(lifehist)
#lifehist larvae life of surviving larvae to adult
lifehist$sLL= ifelse(lifehist$Adult.death!="NA",lifehist$Pupation.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if survived to adult (time to emerge)
lifehist$Emtime= ifelse(lifehist$Adult.death!="NA",lifehist$Emergence.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if died before adult Preadult.death
lifehist$Preadult.death=ifelse(!is.na(lifehist$PD),lifehist$PD-lifehist$Hatch.day,
ifelse(!is.na(lifehist$LD),lifehist$LD-lifehist$Hatch.day, NA))
#if adult death is NA, then Sex= NA
lifehist$Sex1=ifelse(is.na(lifehist$Adult.death), NA,ifelse(lifehist$Sex=="M",1,0))
#deathstatus is 0=for died preadult, 1= for died as adult
lifehist$Death_stat=ifelse(is.na(lifehist$Preadult.death), 1,0)
#Rate of adult development
lifehist$AdRate<- (1/lifehist$Emtime)
#Rate of larvae development
lifehist$LarvRate<- (1/lifehist$sLL)
#length of time as pupae
lifehist$Puplen<- lifehist$Emergence.date-lifehist$Pupation.date
#Rate of pupal development
lifehist$Puprate<- (1/lifehist$Puplen)
#rate of development if died as preadult
lifehist$D.pread.rate<- (1/lifehist$Preadult.death)
#length of adult life
lifehist$AL<- lifehist$Adult.death-lifehist$Emergence.date
#print out new datafile
write.csv(lifehist,"2017_10_17 Life history data new clean file.csv")
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehist<-read.csv("2017_09_28 Life history data file1.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
View(lifehist)
lifehist$sLL= ifelse(lifehist$Adult.death!="NA",lifehist$Pupation.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if survived to adult (time to emerge)
lifehist$Emtime= ifelse(lifehist$Adult.death!="NA",lifehist$Emergence.date-lifehist$Hatch.day ,NA)
#lifehist preadult length of life if died before adult Preadult.death
lifehist$Preadult.death=ifelse(!is.na(lifehist$PD),lifehist$PD-lifehist$Hatch.day,
ifelse(!is.na(lifehist$LD),lifehist$LD-lifehist$Hatch.day, NA))
lifehist$Sex1=ifelse(is.na(lifehist$Adult.death), NA,ifelse(lifehist$Sex=="M",1,0))
#deathstatus is 0=for died preadult, 1= for died as adult
lifehist$Death_stat=ifelse(is.na(lifehist$Preadult.death), 1,0)
#Rate of adult development
lifehist$AdRate<- (1/lifehist$Emtime)
#Rate of larvae development
lifehist$LarvRate<- (1/lifehist$sLL)
#length of time as pupae
lifehist$Puplen<- lifehist$Emergence.date-lifehist$Pupation.date
#Rate of pupal development
lifehist$Puprate<- (1/lifehist$Puplen)
#rate of development if died as preadult
lifehist$D.pread.rate<- (1/lifehist$Preadult.death)
#length of adult life
lifehist$AL<- lifehist$Adult.death-lifehist$Emergence.date
write.csv(lifehist,"2017_10_17 Life history data new clean file.csv", row.names=F)
getwd()
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
getwd()
knitr::opts_chunk$set(echo = TRUE)
getwd()
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
write.csv(lifehist,"C:/Users/vmc04/Documents/GitHub/wingproj/lifehist/2017_10_17 Life history data new clean file.csv", row.names=F)
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehist<-read.csv("2017_10_17 Life history data new clean file.csv", header=TRUE)
lifehist$Locality=factor(lifehist$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
lifecont1<-read.csv("2017_10_19 Life hist totals for proportion  survived from temp1.csv",header=TRUE)
class(lifecont1)
library(dplyr)
data=mutate(lifecont1, Locality=factor(Locality, levels=unique(Locality)),
Temperature=factor(Temperature, levels=unique(Temperature)),
Status=factor(Status, levels=unique(Status)))
data.xtabs=xtabs(Count~Locality+Temperature+Status, data=data)
ftable(data.xtabs)
mantelhaen.test(data.xtabs)
n=dim(data.xtabs)[3]
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
memory.limit()
memory.limit(size=15000)
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
memory.limit(size=25000)
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
memory.limit(size=50000)
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
memory.limit(size=75000)
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
memory.limit(size=115000)
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
memory.limit(size=200000)
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
memory.limit(size=2000000)
for(i in 1:n){
Name = dimnames(data.xtabs)[3]$Locality[i]
P.value = fisher.test(data.xtabs[,,i])$p.value
cat(Name, "\n")
cat("Fisher test p-value: ", P.value, "\n")
cat("\n")
}
mantelhaen.test(data.xtabs)
View(lifecont1)
lifecont2<-lifecont1
lifecont2$Biome<-ifelse(lifecont2$Locality=="ARS"|"APR"|"RMO"|"RPV", "Amazon",
ifelse(lifecont2$Locality=="TPN"|"TLC"),"Cerrado", "Mata Atlantica")
View(lifecont2)
lifecont2$Biome=ifelse(lifecont2$Locality=="ARS"|"APR"|"RMO"|"RPV", "Amazon",
ifelse(lifecont2$Locality=="TPN"|"TLC"),"Cerrado", "Mata Atlantica")
lifecont2$Biome=ifelse(lifecont2$Locality=="ARS"|"APR"|"RMO"|"RPV", "Amazon", ifelse(lifecont2$Locality=="TPN"|"TLC"),"Cerrado", "Mata Atlantica", NA)
View(lifecont1)
View(data)
lifecont2$Biome=within(lifecont2, ifelse(lifecont2$Locality=="ARS"|"APR"|"RMO"|"RPV", "Amazon", ifelse(lifecont2$Locality=="TPN"|"TLC"),"Cerrado", "Mata Atlantica", NA))
lifecont2$Biome= ifelse(lifecont2$Locality=="ARS", "Amazon",
ifelse(lifecont2$Locality=="APR", "Amazon",
ifelse(lifecont2$Locality=="RMO", "Amazon",
ifelse(lifecont2$Locality=="RPV", "Amazon",
ifelse(lifecont2$Locality=="TPN"),"Cerrado",
ifelse(lifecont2$Locality=="TLC"),"Cerrado","Mata Atlantica"))))
lifecont2$Biome= ifelse(lifecont2$Locality=="ARS", Amazon,
ifelse(lifecont2$Locality=="APR", Amazon,
ifelse(lifecont2$Locality=="RMO", Amazon,
ifelse(lifecont2$Locality=="RPV", Amazon,
ifelse(lifecont2$Locality=="TPN"),Cerrado,
ifelse(lifecont2$Locality=="TLC"),Cerrado,Mata Atlantica))))
lifecont2$Biome= ifelse(lifecont2$Locality="ARS", Amazon,
lifecont2$Biome= ifelse(lifecont2$Locality=="ARS", Amazon,
Mata Atlantica)
lifecont2$Biome= ifelse(lifecont2$Locality=="ARS", "Amazon", "Mata Atlantica")
lifecont2$Biome= ifelse(lifecont2$Locality=="ARS" & "APR", "Amazon", "Mata Atlantica")
?|
?or
lifecont2$Biome= ifelse(lifecont2$Locality=="ARS" | "APR", "Amazon", "Mata Atlantica")
library(lme4)
lifehistshort<-read.csv("2017_10_18 Life history shortened.csv", header=TRUE)
lifehistshort$Locality=factor(lifehistshort$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
View(lifehistshort)
mod_adrate<-lmer(AdRate~Temp_let+(1|Biome)+(1|Ecoregion)+Locality,family=Binomial, link=logit )
mod_adrate<-lmer(AdRate~Temp_let+(1|Biome)+(1|Ecoregion)+Locality,family=binomial, link=logit )
mod_adrate1<-lmer(AdRate~1+(1|Biome)+(1|Ecoregion),family=binomial, data=lifehistshort)
View(lifehistshort)
mod_adrate0<-glmer(AdRate~1+(1|Biome)+(1|State), data=lifehistshort)
mod_adrate0<-glmer(AdRate~1+(1|Biome)+(1|State), family=binomial, data=lifehistshort)
summary(mod_adrate0)
mod_wing0<-lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data=lifehistshort)
summary(mod_wing0)
mod_wingf<-lmer(Wing.length..mm.~Sex+Temp_let+(1|Biome)+(1|State), data=lifehistshort)
summary(mod_wingf)
m0wing <- lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
mFwing <- lmer(Wing.length..mm.~Sex+Temp_let+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
summary(m0wing)
summary(mFwing)
Data <- read.csv("mee3261-sup-0001-DataS1.csv")
m0 <- lmer(BodyL ~ 1 + (1 | Population) + (1 | Container), data = Data)
# Fit alternative model including fixed and all random effects
mF <- lmer(BodyL ~ Sex + Treatment + Habitat + (1 | Population) + (1 | Container), data = Data)
# View model fits for both models
summary(m0)
summary(mF)
m0ML <- lmer(BodyL ~ 1 + (1 | Population) + (1 | Container), data = Data, REML = FALSE)
mFML <- lmer(BodyL ~ Sex + Treatment + Habitat + (1 | Population) + (1 | Container), data = Data, REML = FALSE)
# View model fits for both models fitted by ML
summary(m0ML)
summary(mFML)
mFwing <- lmer(Wing.length..mm.~Sex+Temp_let+Locality+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
summary(mFwing)
mod_wingf<-lmer(Wing.length..mm.~Sex+Temp_let+Locality+(1|Biome)+(1|State), data=lifehistshort)
summary(mod_wingf)
m1wing <- lmer(Wing.length..mm.~Temp_let+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
m2wing <- lmer(Wing.length..mm.~Temp_let+Locality+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
model_wingAIC<-AIC(m0wing,m1wing,m2wing,mFwing)
print(model_wingAIC)
summary(mFwing)
summary(mod_wingf)
View(lifecont1)
headcount<-aggregate(lifecont1$Count, lifecont1$Status=="Alive", length)
headcount<-aggregate(lifecont1$Count~ lifecont1$Status=="Alive", sum)
m0wing <- lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE, na.omit=TRUE)
summary(m0wing)
m0wing <- lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
m01wing <- lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE, na.action=na.omit)
modelnaomit<-AIC(m0wing, m01wing)
modelnaomit
m02wing <- lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE, na.action=na.exclude)
modelnaomit<-AIC(m0wing, m01wing,m02wing)
modelnaomit
model_wingAIC<-AIC(m0wing,m1wing,m2wing,mFwing)
model_wingAIC
m03wing <- glmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
m03wing
mod_adrateF1<-glmer(AdRate~Temp_let+Locality+(1|Biome)+(1|State), family=binomial, data=lifehistshort)
mod_adrateF2<-glmer(AdRate~Temp_let+Locality+(1|Biome)+(1|State), family=binomial, data=lifehistshort, na.action=na.omit)
modadrate<-AIC(mod_adrate0, mod_adrate1, mod_adrateF1, mod_adrateF2)
mod_adrate1<-glmer(AdRate~1+(1|Biome)+(1|State), family=binomial, data=lifehistshort,na.action=na.omit)
---
title: "Life hist stats attempts anova, glm, prob test"
author: "Virginia Chu"
date: "October 19, 2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
lifehistshort<-read.csv("2017_10_18 Life history shortened.csv", header=TRUE)
lifehistshort$Locality=factor(lifehistshort$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
##nested design in r
boxplot(AdRate~Temp_let, data=lifehistshort)
boxplot(AdRate~Biome, data=lifehistshort)
boxplot(AdRate~Locality, data=lifehistshort)
dotplot(AdRate~Locality|Biome, data=lifehistshort)
res1<-lm(AdRate~ Biome + Biome/Locality, data=lifehistshort)
anova(res1)
TukeyHSD(aov(res1), "Biome")
TukeyHSD(aov(res1), "Biome:Locality")
## effect of temp on proportion surviving by sex and location
lifetot<-read.csv("2017_10_19 Life hist totals for proportion  survived from temp.csv", header=TRUE)
lifetot$Total<-lifetot$Female+lifetot$Male+lifetot$Died
lifetot$PerFem<-lifetot$Female/lifetot$Total
lifetot$PerMal<-lifetot$Male/lifetot$Total
lifetot$Alive<-lifetot$Male+lifetot$Female
table( lifehistshort$Temp_let, lifehistshort$Sex1)
prop.test(table(lifehistshort$Temp_let, lifehistshort$Sex1), correct=FALSE)
#prop.test(table(lifehistshort$Temp_num, lifehistshort$Sex1), correct=FALSE)
table( lifehistshort$Locality, lifehistshort$Sex1)
prop.test(table(lifehistshort$Locality, lifehistshort$Sex1), correct=FALSE)
#library(MASS)
#survtab<-xtabs(Death_stat~Locality+Temp_let, data=lifehistshort)
#loglm(~Locality+Temp_let,survtab)
library(gmodels)
#make separate table
lifecont<-subset(lifehistshort, select=c(5,7,17) )
#CrossTable(lifehistshort$Death_stat, lifehistshort$Temp_let, chisq=TRUE)
#CrossTable(lifetot$Locality, lifetot$Temp, chisq=TRUE)
###WORKS FOR 3 WAY CONTINGENCY
lifecont1<-read.csv("2017_10_19 Life hist totals for proportion  survived from temp1.csv",header=TRUE)
class(lifecont1)
library(dplyr)
### Specify the order of factor levels
### Otherwise, R will alphabetize them
data=mutate(lifecont1, Locality=factor(Locality, levels=unique(Locality)),
Temperature=factor(Temperature, levels=unique(Temperature)),
Status=factor(Status, levels=unique(Status)))
data.xtabs=xtabs(Count~Locality+Temperature+Status, data=data)
ftable(data.xtabs)
mantelhaen.test(data.xtabs)
lifecont2<-lifecont1
lifecont2$Biome= ifelse(lifecont2$Locality=="ARS" | "APR", "Amazon", "Mata Atlantica")
data=mutate(lifecont1, Locality=factor(Locality, levels=unique(Locality)),
Temperature=factor(Temperature, levels=unique(Temperature)),
Status=factor(Status, levels=unique(Status)))
data.xtabs=xtabs(Count~Locality+Temperature+Status, data=data)
ftable(data.xtabs)
mantelhaen.test(data.xtabs)
#ind fisher exact tests
#n=dim(data.xtabs)[3]
#for(i in 1:n){
#   Name = dimnames(data.xtabs)[3]$Locality[i]
#   P.value = fisher.test(data.xtabs[,,i])$p.value
#   cat(Name, "\n")
#   cat("Fisher test p-value: ", P.value, "\n")
#   cat("\n")
#  } #insufficient workspace even at 2e6
##glmm
#from Nakagawa et al 2013
library(lme4)
# Fit null model without fixed effects (but including all random effects)
mod_adrate0<-glmer(AdRate~1+(1|Biome)+(1|State), family=binomial, data=lifehistshort)
mod_adrate1<-glmer(AdRate~1+(1|Biome)+(1|State), family=binomial, data=lifehistshort,na.action=na.omit)
mod_adrateF1<-glmer(AdRate~Temp_let+Locality+(1|Biome)+(1|State), family=binomial, data=lifehistshort)
mod_adrateF2<-glmer(AdRate~Temp_let+Locality+(1|Biome)+(1|State), family=binomial, data=lifehistshort, na.action=na.omit)
summary(mod_adrate0)
modadrate<-AIC(mod_adrate0, mod_adrate1, mod_adrateF1, mod_adrateF2)
##body size
#null
mod_wing0<-lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data=lifehistshort)
summary(mod_wing0)
#full
mod_wingf<-lmer(Wing.length..mm.~Sex+Temp_let+Locality+(1|Biome)+(1|State), data=lifehistshort)
summary(mod_wingf)
# AIC and BIC needs to be calcualted with ML not REML in body size models
m0wing <- lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
m01wing <- lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE, na.action=na.omit)
m02wing <- lmer(Wing.length..mm.~1+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE, na.action=na.exclude)
m1wing <- lmer(Wing.length..mm.~Temp_let+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
m2wing <- lmer(Wing.length..mm.~Temp_let+Locality+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
mFwing <- lmer(Wing.length..mm.~Sex+Temp_let+Locality+(1|Biome)+(1|State), data = lifehistshort, REML = FALSE)
summary(m0wing)
summary(m01wing)
modelnaomit<-AIC(m0wing, m01wing,m02wing)
summary(mFwing)
model_wingAIC<-AIC(m0wing,m1wing,m2wing,mFwing)
print(model_wingAIC)
Data <- read.csv("mee3261-sup-0001-DataS1.csv")
m0 <- lmer(BodyL ~ 1 + (1 | Population) + (1 | Container), data = Data)
# Fit alternative model including fixed and all random effects
mF <- lmer(BodyL ~ Sex + Treatment + Habitat + (1 | Population) + (1 | Container), data = Data)
# View model fits for both models
summary(m0)
summary(mF)
m0ML <- lmer(BodyL ~ 1 + (1 | Population) + (1 | Container), data = Data, REML = FALSE)
mFML <- lmer(BodyL ~ Sex + Treatment + Habitat + (1 | Population) + (1 | Container), data = Data, REML = FALSE)
# View model fits for both models fitted by ML
summary(m0ML)
summary(mFML)
```
## R Markdown
Proportion- http://www.r-tutor.com/elementary-statistics/inference-about-two-populations/comparison-two-population-proportions
Cochran-mantel-haenszel-https://rcompanion.org/rcompanion/b_10.html
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
modadrate<-AIC(mod_adrate0, mod_adrate1, mod_adrateF1, mod_adrateF2)
modadrate
View(modadrate)
mod_adrate0<-lmer(AdRate~1+(1|Biome)+(1|State), family=binomial, data=lifehistshort)
mod_adrate1<-lmer(AdRate~1+(1|Biome)+(1|State), family=binomial, data=lifehistshort,na.action=na.omit)
mod_adrateF1<-lmer(AdRate~Temp_let+Locality+(1|Biome)+(1|State), family=binomial, data=lifehistshort)
mod_adrateF2<-lmer(AdRate~Temp_let+Locality+(1|Biome)+(1|State), family=binomial, data=lifehistshort, na.action=na.omit)
summary(mod_adrate0)
mod_adrate01<-lmer(AdRate~1+(1|Biome)+(1|State), family=quasibinomial, data=lifehistshort)
mod_adrate01<-glm(AdRate~1+(1|Biome)+(1|State), family=quasibinomial, data=lifehistshort)
mod_adrate01<-glm(AdRate~1+(1|Biome)+(1|State), family=binomial, data=lifehistshort)
mod_adrate01<-glm(AdRate~1+(1|Biome)+(1|State), family=binomial(logit), data=lifehistshort)
View(lifehistshort)
survcurve<-read.csv("2017_10_18 Life history shortened.csv", header=TRUE)
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
survcurve<-read.csv("2017_10_18 Life history shortened.csv", header=TRUE)
survcurve$Locality=factor(survcurve$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
survtemps<-split(survcurve, survcurve$Temp_let)
surva<-survtemps[[1]]
survb<-survtemps[[2]]
survc<-survtemps[[3]]
View(surva)
fitALoc<-survfit(Surv(surva$time,surva$Death_stat)~surva$Locality, type=km)
library(survival)
library(RColorBrewer)
library(ggplot2)
library(survminer)
fitALoc<-survfit(Surv(surva$time,surva$Death_stat)~surva$Locality, type=km)
fitALoc<-survfit(Surv(surva$time,surva$Death_stat)~surva$Locality, type="kaplan-meier")
fitBLoc<-survfit(Surv(survb$time,survb$Death_stat)~survb$Locality, type="kaplan-meier")
fitCLoc<-survfit(Surv(survc$time,survc$Death_stat)~survc$Locality, type="kaplan-meier")
fitABio<-survfit(Surv(surva$time,surva$Death_stat)~surva$Biome, type="kaplan-meier")
fitBBio<-survfit(Surv(survb$time,survb$Death_stat)~survb$Biome, type="kaplan-meier")
fitCBio<-survfit(Surv(survc$time,survc$Death_stat)~survc$Biome, type="kaplan-meier")
cols<-brewer.pal(n=7, name= "PRGn")
cols_loc<-cols[survcurve$Locality]
cols2<-brewer.pal(n=3, name="Set1")
cols_bio<-cols2[survcurve$biome]
fit2<-survfit(Surv(survcurve$Deathtime, survcurve$Status)~survcurve$Biome)
fit2<-survfit(Surv(survcurve$time, survcurve$Death_stat)~survcurve$Biome)
ggsurvplot(fitALoc, data=surva, main = "Adult time to death at 20C by Locality", legend= "bottom", legend.title = "Locality", xlim=c(0,40), risk.table = TRUE,pval=TRUE,  surv.plot.height = 1,risk.table.height = 0.5)
survcurve<-read.csv("2017_10_18 Life history shortened.csv", header=TRUE)
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/lifehist")
survcurve<-read.csv("2017_10_18 Life history shortened.csv", header=TRUE)
survcurve$Locality=factor(survcurve$Locality, c("ARS","APR","RPV","RMO","TLC","TPN","SJU"))
survtemps<-split(survcurve, survcurve$Temp_let)
surva<-survtemps[[1]]
survb<-survtemps[[2]]
survc<-survtemps[[3]]
fitALoc<-survfit(Surv(surva$time,surva$Death_stat)~surva$Locality, type="kaplan-meier")
fitBLoc<-survfit(Surv(survb$time,survb$Death_stat)~survb$Locality, type="kaplan-meier")
fitCLoc<-survfit(Surv(survc$time,survc$Death_stat)~survc$Locality, type="kaplan-meier")
fitABio<-survfit(Surv(surva$time,surva$Death_stat)~surva$Biome, type="kaplan-meier")
fitBBio<-survfit(Surv(survb$time,survb$Death_stat)~survb$Biome, type="kaplan-meier")
fitCBio<-survfit(Surv(survc$time,survc$Death_stat)~survc$Biome, type="kaplan-meier")
fitALat<-survfit(Surv(surva$time,surva$Death_stat)~surva$Lat_group, type="kaplan-meier")
fitBLat<-survfit(Surv(survb$time,survb$Death_stat)~survb$Lat_group, type="kaplan-meier")
fitCLat<-survfit(Surv(survc$time,survc$Death_stat)~survc$Lat_group, type="kaplan-meier")
cols3<-brewer.pal(n=3, name="Greys")
cols_lat<-cols3[survcurve$Lat_group]
ggsurvplot(fitALat,data=surva, color=cols_lat, main = "Adult time to death at 20C by latitude", legend= "bottom", legend.title = "Latitude group", xlim=c(0,40), risk.table = TRUE,pval=TRUE,risk.table.height = 0.3, surv.plot.height = 1)
ggsurvplot(fitALat,data=surva, palette= "Greys", main = "Adult time to death at 20C by latitude", legend= "bottom", legend.title = "Latitude group", xlim=c(0,40), risk.table = TRUE,pval=TRUE,risk.table.height = 0.3, surv.plot.height = 1)
ggsurvplot(fitALat,data=surva, color="#7570b3", "#d95f02","1b9e77", main = "Adult time to death at 20C by latitude", legend= "bottom", legend.title = "Latitude group", xlim=c(0,40), risk.table = TRUE,pval=TRUE,risk.table.height = 0.3, surv.plot.height = 1)
ggsurvplot(fitALat,data=surva, palette=c("#7570b3", "#d95f02","1b9e77"), main = "Adult time to death at 20C by latitude", legend= "bottom", legend.title = "Latitude group", xlim=c(0,40), risk.table = TRUE,pval=TRUE,risk.table.height = 0.3, surv.plot.height = 1)
ggsurvplot(fitALat,data=surva, palette=c("#7570b3", "#d95f02","#1b9e77"), main = "Adult time to death at 20C by latitude", legend= "bottom", legend.title = "Latitude group", xlim=c(0,40), risk.table = TRUE,pval=TRUE,risk.table.height = 0.3, surv.plot.height = 1)
View(survcurve)
View(survcurve)
