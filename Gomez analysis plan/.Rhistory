library(UsingR)
example(anscombe)
library(swirl)
install.packages("swirl")
library(swirl)
swirl
swirl()
install.packages("swirl")
library(swirl)
rm(list=ls())
library(swirl)
swirl()
fit<-lm(child~parent, data=galton)
sqrt(fit$residuals/n-2)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/n-2))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<- mean(galton$child)
sTot<-galton$child-mu
sTot<-sum((galton$child-mu)^2)
sRes<-sum()
sRes<-deviance(fit)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parents)
cor(galton$child)
cor(galton)
cor(galton$parent,galton$child)^2
ones <- rep(1, nrow(galton))
ones
swirl)_
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent, galton)
lm(child~1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees<-eliminat("Girth",trees)
trees2 <-
| eliminate("Girth", trees
trees2 <-eliminate("Girth", trees
)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(., data=swiss)
all<-lm(., data=swiss)
all<-lm(Fertility~., data=swiss)
summary(all)
summary(lm(Fertility~Agriculture, data=swiss))
cov(swiss$Examination,swiss$Education)
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms(data=swiss)
makelms()
ec<-sum(swiss$Examination+swiss$Catholic)
ec<-swiss$Examination+swiss$Catholic
efit<-lm(Fertility~.+ec, data=swiss)
coef(all)-coef(efit)
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
q1<-lm(y~x)
summary(q1)
beta1<-cor(y,x)* sd(y)/sd(x)
beta()
beta1
summary(beta1)
data=mtcars
head(data)
q3<-lm(mpg~wt)
q3<-lm(mpg~wt, data=data)
summary(q3)
predict(fit,data.frame(x=mean(x)), interval="confidence")
predict(q3,data.frame(x=mean(x)), interval="confidence")
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
?mtcars
predict(fit,data.frame(x=3), interval="prediction")
predict(fit,data.frame(x=2), interval="prediction")
predict(fit,data.frame(x=5), interval="prediction")
predict(fit,data.frame(x=.5), interval="prediction")
predict(fit,data.frame(x=x/2), interval="prediction")
fit2<-lm(y~I(x/2))
tbl2<-summary(fit2)$coefficients
summary(tbl2)
tbl2
summary(fit2)
predict(fit2,data.frame(x=mean(x)), interval="confidence")
swil()
swirl()
library(swirl)
swirl()
View(InsectSprays)
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
s!
sA
summary(InsectSprays[,2])
sapply(InsectSprays)
sapply(class(InsectSprays))
sapply(InsectSprays,class)
lm(count~spray, InsectSprays)
fit<-lm(count~spray, Insectsprays)
fit<-lm(count~spray, InsectSprays)
summary(fit$coefficients)
summary(fit)$coef
est<-fit$coef[,1]
est<-Summary(fit)$coef[,1]
Summary(fit)$coef[,1]
summary(fit)$coef[,1]
est<-summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit<-lm(count~spray-1, InsectSprays)
summary(nfit)$coef
spray2<-relevel(InsectSprays$spray, "C")
fit2<-lm(count~spray, spray2)
fit2<-lm(count~spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef[2]-fit$coef[3]
(fit$coef[2]-fit$coef[3])/1.0611
(fit$coef[2]-fit$coef[3])/1.6011
library(mtcars)
mtcars
head(mtcars)
fit<-lm(mpg~cyl+wt)
fit<-lm(mpg~cyl+wt,data=mtcars)
summary(fit)
summary(fit)$coef
summary(fit)$coef[3,1]
mtcars$cyl1<-factor(mtcars$cyl)
fit<-lm(mpg~cyl+wt,data=mtcars)
summary(fit)$coef
summary(fit)$coef[3,1]
mtcars$cyl<- factor(mtcars$cyl)
fit<- lm(mpg~cyl+wt,mtcars)
summary(fit)$coef[3,1]
summary(fit)$coef
fitun<-lm(mpg~cyl, data=mtcars)
summary(fitun)$coef[3,1]
fitin<-lm(mpg~cyl*wt,data=mtcars)
summary(fitin)
summary(fit)
library(lmtest)
install.packages("lmtest")
lrtest(fit,fitin)
library(lmtest)
lrtest(fit,fitin)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
summary(fit4)$coef[2,1]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<- lm(y~x)
predict(fit)
hat(x,intercept = TRUE)
influence.measures(fit)$infmat[5,"dfb.x"]
dfbeta(x)
dfbeta(fit)
dfbeta(fit,influence)
getwd()
?Sweave
getwd()
setwd("C:/Users/vmc04/Documents/GitHub/wingproj/Gomez analysis plan")
fwing<- read.csv("2017_10_02 Field 18 Partial warps.csv", header = TRUE)
head(fwing)
head(fwing)
cline.mod<-lm(CS~Latitude, data=fwing)
summary(cline.mod)
qqmath( ~ resid(cline.mod),
xlab = "Theoretical Quantiles",
ylab = "Residuals"
)
?qqmath
??qqmath
library(Morpho)
qqmath( ~ resid(cline.mod), xlab = "Theoretical Quantiles", ylab = "Residuals")
qqmat( ~ resid(cline.mod), xlab = "Theoretical Quantiles", ylab = "Residuals")
plot( ~ resid(cline.mod), xlab = "Theoretical Quantiles", ylab = "Residuals")
qqplot( ~ resid(cline.mod), xlab = "Theoretical Quantiles", ylab = "Residuals")
winglenm<- aggregate(fwing$Length.mm, list(lat=fwing$Latitude),mean, na.rm=TRUE)
winglenm<- aggregate(fwing$Length.mm, list(lat=fwing$Latitude),mean, na.rm=TRUE)
winglensd<- aggregate(fwing$Length.mm, list(lat=fwing$Latitude),sd, na.rm=TRUE)
csm<- aggregate(fwing$CS, list(lat=fwing$Latitude),mean, na.rm=TRUE)
cssd<- aggregate(fwing$CS, list(lat=fwing$Latitude),sd, na.rm=TRUE)
winglenm
?abline
plot(fwing$Latitude, fwing$winglenm)
plot(fwing$winglenm, fwing$Latitude)
plot(fwing$Length.mm, fwing$Latitude)
( fwing$Latitude, fwing$Length.mm)
plot(fwing$Latitude , fwing$Length.mm)
plot(fwing$Latitude..S. , fwing$Length.mm)
plot(fwing$Latitude..S. , fwing$Length.mm)
plot(winglenm)
plot(csm)
abline(lm(CS~Latitude, data=fwing))
library(dplyr)
library(ggplot2)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
winglc<-summarySE(fwing, measurevar="Length.mm", groupvars = "Latitude")
csc<-summarySE(fwing, measurevar="CS", groupvars = "Latitude")
winglc
csc
ggplot(winglc, aes(x=Latitude, y=Length.mm, colour=Latitude)) +geom_errorbar(aes(ymin=Length.mm+se), width=.1)+ geom_line()+ geom_point()
ggplot(winglc, aes(x=Latitude, y=Length.mm, colour=Latitude)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_line()+ geom_point()
ggplot(winglc, aes(x=Latitude, y=Length.mm, colour=Latitude)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()
ggplot(winglc, aes(x=Latitude, y=Length.mm, colour=Latitude)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ geom_abline()
ggplot(winglc, aes(x=Latitude, y=Length.mm, colour=Latitude)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ -geom_abline()
winglc<-summarySE(fwing, measurevar="Length.mm", groupvars = "Latitude..S.")
csc<-summarySE(fwing, measurevar="CS", groupvars = "Latitude..S.")
ggplot(winglc, aes(x=Latitude, y=Length.mm, colour=Latitude)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ geom_abline()
ggplot(winglc, aes(x=Latitude, y=Length.mm, colour=Latitude..S.)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ geom_abline()
ggplot(winglc, aes(x=Latitude..S., y=Length.mm, colour=Latitude..S.)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ geom_abline()
ggplot(winglc, aes(x=Latitude..S., y=Length.mm, colour=Latitude..S.)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ geom_abline(lm(Length.mm~Latitude..S.), col="black")
ggplot(winglc, aes(x=Latitude..S., y=Length.mm, colour=Latitude..S.)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ geom_abline(lm(Length.mm ~ Latitude..S.,data=fwing), col="black")
ggplot(winglc, aes(x=Latitude..S., y=Length.mm, colour=Latitude..S.)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ abline(lm(Length.mm ~ Latitude..S.,data=fwing), col="black")
coef(lm(fwing$Length.mm~fwing$Latitude..S.))
ggplot(winglc, aes(x=Latitude..S., y=Length.mm, colour=Latitude..S.)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ geom_abline(intercept=2.836, slope=0.0227)
coef(lm(fwing$CS~fwing$Latitude..S.))
ggplot(csc, aes(x=Latitude..S., y=CS, colour=Latitude..S.)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1)+ geom_point()+ geom_abline(intercept=2.627, slope=0.0229)
ggplot(csc, aes(x=Latitude..S., y=CS, colour=Latitude..S.)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1)+ geom_point()+ geom_abline(intercept=2.627, slope=0.0229)
pd<-position_dodge(0.1)
ggplot(csc, aes(x=Latitude..S., y=CS, colour=Latitude..S.)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1, position = pd)+ geom_point()+ geom_abline(intercept=2.627, slope=0.0229)
ggplot(csc, aes(x=Latitude..S., y=CS, colour=Latitude..S.)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1)+ geom_point()+ geom_abline(intercept=2.627, slope=0.0229)
ggplot(csc, aes(x=Latitude..S., y=CS, colour=fwing$Biome)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1, position = pd)+ geom_point()+ geom_abline(intercept=2.627, slope=0.0229)
ggplot(csc, aes(x=Latitude..S., y=CS, colour=Latitude..S.)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1, position = pd)+ geom_point()+ geom_abline(intercept=2.627, slope=0.0229)
ggplot(winglc, aes(x=Latitude..S., y=Length.mm, colour=Latitude..S.)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point()+ geom_abline(intercept=2.836, slope=0.0227)
ggplot(csc, aes(x=Latitude..S., y=CS, colour="red","red","red","red","green", "green", "blue")) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1, position = pd)+ geom_point()+ geom_abline(intercept=2.627, slope=0.0229)
pd<-position_dodge(0.1)
ggplot(csc, aes(x=Latitude..S., y=CS, colour="red","red","red","red","green", "green", "blue")) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1, position = pd)+ geom_point()+ geom_abline(intercept=2.627, slope=0.0229)
ggplot(csc, aes(x=Latitude..S., y=CS)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1, position = pd)+ geom_point(aes(colour=fwing$Biome))+ geom_abline(intercept=2.627, slope=0.0229)
winglc<-summarySE(fwing, measurevar="Length.mm", groupvars = "Latitude..S.","Biome", "Ecoregion")
winglc<-summarySE(fwing, measurevar="Length.mm", groupvars = "Latitude..S.","Biome")
winglc<-summarySE(fwing, measurevar="Length.mm", groupvars = c("Latitude..S.","Biome", "Ecoregion"))
csc<-summarySE(fwing, measurevar="CS", groupvars = c("Latitude..S.","Biome", "Ecoregion"))
ggplot(winglc, aes(x=Latitude..S., y=Length.mm)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point(aes(colour=Biome))+ geom_abline(intercept=2.836, slope=0.0227)
ggplot(csc, aes(x=Latitude..S., y=CS)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1, position = pd)+ geom_point(aes(colour=Biome))+ geom_abline(intercept=2.627, slope=0.0229)
ggplot(winglc, aes(x=Latitude..S., y=Length.mm)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point(aes(colour=Biome))+ geom_abline(intercept=2.836, slope=0.0227) +xlab("Latitude (Southern)")+ ylab("Wing Length (mm)")+ ggtitle("Field Wing length across increasing latitude")
ggplot(winglc, aes(x=Latitude..S., y=Length.mm)) +geom_errorbar(aes(ymin=Length.mm-se, ymax=Length.mm+se), width=.1)+ geom_point(aes(colour=Biome))+ geom_abline(intercept=2.836, slope=0.0227) +xlab("Latitude (Southern)")+ ylab("Wing Length (mm)")+ ggtitle("Field Wing length across increasing latitude")
ggplot(csc, aes(x=Latitude..S., y=CS)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1)+ geom_point(aes(colour=Biome))+ geom_abline(intercept=2.627, slope=0.0229) +xlab("Latitude (Southern)")+ ylab("Centroid Size")+ ggtitle("Field Centroid Size across increasing latitude")
ggplot(csc, aes(x=Latitude..S., y=CS)) +geom_errorbar(aes(ymin=CS-se, ymax=CS+se), width=.1)+ geom_point(aes(colour=Biome))+ geom_abline(intercept=2.627, slope=0.0229) +xlab("Latitude (Southern)")+ ylab("Centroid Size")+ ggtitle("Field Centroid Size across increasing latitude")
